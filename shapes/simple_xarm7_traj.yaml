# Goal for the moveit_msgs/ExecuteTrajectory action.
# The trajectory field contains the full definition.
trajectory:
  # We will use a joint-space trajectory.
  joint_trajectory:
    # The header specifies the coordinate frame. 'link_base' is common for xArm.
    header:
      frame_id: "link_base"
    # The names of the joints to be controlled. MUST match the robot's config.
    joint_names:
      - "joint1"
      - "joint2"
      - "joint3"
      - "joint4"
      - "joint5"
      - "joint6"
      - "joint7"
    # A list of waypoints. Each point has positions and a time_from_start.
    points:
      # Point 1: The starting position (all joints at 0 radians).
      # This should ideally match the robot's current state.
      - positions: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        # This point should be reached immediately.
        time_from_start: { sec: 0, nanosec: 0 }

      # Point 2: The target position.
      - positions: [0.5, -0.4, 0.0, 0.6, 0.0, 1.0, 0.0] # Values in radians
        # This point should be reached 4 seconds after the trajectory starts.
        time_from_start: { sec: 4, nanosec: 0 }

      # Point 3: Return to the home position.
      - positions: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        # This point should be reached 8 seconds after the trajectory starts.
        # (i.e., it takes 4 seconds to go from Point 2 to Point 3).
        time_from_start: { sec: 8, nanosec: 0 }